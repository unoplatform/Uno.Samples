<Page x:Class="Commerce.DealsPage"
	  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:local="using:Commerce"
	  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
	  xmlns:utu="using:Uno.Toolkit.UI"
	  xmlns:uer="using:Uno.Extensions.Reactive.UI"
	  xmlns:uen="using:Uno.Extensions.Navigation.UI"
	  mc:Ignorable="d"
	  NavigationCacheMode="Required"
	  Background="{ThemeResource BackgroundBrush}">

	<Page.Resources>
		<DataTemplate x:Key="DealItemTemplate">
			<utu:CardContentControl Style="{StaticResource OutlinedCardContentControlStyle}">
				<utu:CardContentControl.ContentTemplate>
					<DataTemplate>
						<utu:AutoLayout Background="{ThemeResource SurfaceBrush}"
										CornerRadius="12">
							<Image Source="{Binding Photo}"
								   Stretch="UniformToFill"
								   utu:AutoLayout.PrimaryAlignment="Stretch" />
							<utu:AutoLayout>
								<utu:AutoLayout Spacing="16"
												Padding="16,16,16,16"
												Orientation="Horizontal">
									<utu:AutoLayout utu:AutoLayout.CounterAlignment="Center"
													utu:AutoLayout.PrimaryAlignment="Stretch">
										<utu:AutoLayout PrimaryAxisAlignment="Center">
											<utu:AutoLayout PrimaryAxisAlignment="Center">
												<TextBlock Foreground="{ThemeResource OnSurfaceLowBrush}"
														   TextWrapping="Wrap"
														   Text="{Binding Brand}" />
												<TextBlock Foreground="{ThemeResource OnSurfaceBrush}"
														   TextWrapping="Wrap"
														   Text="{Binding Name}" />
											</utu:AutoLayout>
										</utu:AutoLayout>
									</utu:AutoLayout>
									<utu:AutoLayout PrimaryAxisAlignment="End"
													Orientation="Horizontal"
													utu:AutoLayout.CounterAlignment="Center">
										<utu:AutoLayout PrimaryAxisAlignment="End"
														Orientation="Horizontal">
											<utu:AutoLayout utu:AutoLayout.CounterAlignment="Start">
												<utu:AutoLayout Spacing="4"
																utu:AutoLayout.CounterAlignment="End">
													<utu:AutoLayout Background="{ThemeResource ErrorBrush}"
																	Padding="4,4,4,4"
																	PrimaryAxisAlignment="End"
																	Orientation="Horizontal"
																	utu:AutoLayout.CounterAlignment="End">
														<TextBlock Foreground="{ThemeResource OnErrorBrush}"
																   TextAlignment="End"
																   Text="{Binding Discount}"
																   utu:AutoLayout.CounterAlignment="Start" />
													</utu:AutoLayout>
													<utu:AutoLayout PrimaryAxisAlignment="End"
																	Orientation="Horizontal"
																	utu:AutoLayout.CounterAlignment="End">
														<TextBlock Foreground="{ThemeResource OnSurfaceBrush}"
																   TextAlignment="End"
																   Text="{Binding DiscountedPrice}"
																   utu:AutoLayout.CounterAlignment="Start" />
													</utu:AutoLayout>
												</utu:AutoLayout>
											</utu:AutoLayout>
										</utu:AutoLayout>
									</utu:AutoLayout>
								</utu:AutoLayout>
							</utu:AutoLayout>
						</utu:AutoLayout>
					</DataTemplate>
				</utu:CardContentControl.ContentTemplate>
			</utu:CardContentControl>
		</DataTemplate>
	</Page.Resources>

	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" x:Name="DealsColumn" />
			<ColumnDefinition Width="0" x:Name="DetailsColumn" />
		</Grid.ColumnDefinitions>

		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup>
				<VisualState x:Name="Narrow" />
				<VisualState x:Name="Wide">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWindowWidthh}" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="DealsColumn.Width" Value="*" />
						<Setter Target="DealsColumn.MinWidth" Value="300" />
						<Setter Target="DetailsColumn.Width" Value="2*" />
						<Setter Target="DetailsGrid.Visibility" Value="Visible" />
						<Setter Target="Details.(uen:Region.Attached)" Value="true" />
					</VisualState.Setters>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>

		<utu:AutoLayout Background="{ThemeResource SurfaceBrush}">
			<utu:AutoLayout uen:Region.Attached="True"
							utu:AutoLayout.PrimaryAlignment="Stretch">

				<utu:NavigationBar Content="Uno Commerce"
								   Background="{ThemeResource PrimaryBrush}"
								   Style="{StaticResource ModalNavigationBarStyle}"
								   x:Uid="Deals_Navigation_Bar">
					<utu:NavigationBar.PrimaryCommands>
						<AppBarButton Label="Refresh" Command="{Binding ElementName=DealsFeedView, Path=State.Refresh}" />
					</utu:NavigationBar.PrimaryCommands>
				</utu:NavigationBar>

				<utu:TabBar uen:Region.Attached="True"
							Style="{StaticResource TopTabBarStyle}">
					<utu:TabBarItem x:Uid="DealsPage_DealsTab"
									AutomationProperties.Name="TabBarItem"
									Content="Deals"
									uen:Region.Name="DealsTab"
									utu:AutoLayout.CounterAlignment="Center"
									utu:AutoLayout.PrimaryAlignment="Stretch" />
					<utu:TabBarItem x:Uid="DealsPage_FavoritesTab"
									AutomationProperties.Name="TabBarItem"
									Content="Favorites"
									uen:Region.Name="FavoritesTab"
									utu:AutoLayout.CounterAlignment="Center"
									utu:AutoLayout.PrimaryAlignment="Stretch" />
				</utu:TabBar>

				<Grid utu:AutoLayout.PrimaryAlignment="Stretch"
					  uen:Region.Attached="True"
					  uen:Region.Navigator="Visibility">

					<!--
						TODO: Both FeedView should be set to collapsed by default
						However, currently setting them to Collapsed by default results
						in no data being shown. Deals is in XAML second, to position
						it over the top of the Favorites, since they're currently
						both visible by default
					-->
					<uer:FeedView uen:Region.Name="FavoritesTab"
								  Source="{Binding Favorites}"
								  Visibility="Visible">
						<DataTemplate>
							<UserControl>
								<Grid>
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup>
											<VisualState x:Name="Wide">
												<VisualState.StateTriggers>
													<AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWindowWidthh}" />
												</VisualState.StateTriggers>
												<VisualState.Setters>
													<Setter Target="DealsListView.SelectionMode" Value="Single" />
													<Setter Target="DealsListView.IsItemClickEnabled" Value="False" />
												</VisualState.Setters>
											</VisualState>
											<VisualState x:Name="Narrow">
												<VisualState.StateTriggers>
													<AdaptiveTrigger MinWindowWidth="0"
																	 MinWindowHeight="0" />
												</VisualState.StateTriggers>
												<VisualState.Setters>
													<Setter Target="DealsListView.SelectionMode" Value="None" />
													<Setter Target="DealsListView.IsItemClickEnabled" Value="True" />
												</VisualState.Setters>
											</VisualState>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>

									<ListView x:Name="DealsListView"
											  Background="{StaticResource SurfaceBrush}"
											  ItemsSource="{Binding Data}"
											  ItemTemplate="{StaticResource DealItemTemplate}"
											  SelectionMode="None"
											  IsItemClickEnabled="True"
											  uen:Navigation.Request="DealsProduct"
											  Style="{StaticResource ListViewStyle}">
									</ListView>
								</Grid>
							</UserControl>
						</DataTemplate>
					</uer:FeedView>

					<!--
						Since both FeedView are Visible at the moment we need a layer
						in between because there are on top of each other
					-->
					<Border Visibility="{Binding Path=Visibility, ElementName=DealsFeedView}"
							VerticalAlignment="Stretch"
							HorizontalAlignment="Stretch" />

					<uer:FeedView x:Name="DealsFeedView"
								  Source="{Binding Items}"
								  uen:Region.Name="DealsTab"
								  Visibility="Visible">
						<DataTemplate>
							<UserControl>
								<Grid>
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup>
											<VisualState x:Name="Wide">
												<VisualState.StateTriggers>
													<AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWindowWidthh}" />
												</VisualState.StateTriggers>
												<VisualState.Setters>
													<Setter Target="DealsListView.SelectionMode" Value="Single" />
													<Setter Target="DealsListView.IsItemClickEnabled" Value="False" />
												</VisualState.Setters>
											</VisualState>
											<VisualState x:Name="Narrow">
												<VisualState.StateTriggers>
													<AdaptiveTrigger MinWindowWidth="0"
																	 MinWindowHeight="0" />
												</VisualState.StateTriggers>
												<VisualState.Setters>
													<Setter Target="DealsListView.SelectionMode" Value="None" />
													<Setter Target="DealsListView.IsItemClickEnabled" Value="True" />
												</VisualState.Setters>
											</VisualState>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>

									<ListView x:Name="DealsListView"
											  Background="{StaticResource SurfaceBrush}"
											  ItemsSource="{Binding Data}"
											  ItemTemplate="{StaticResource DealItemTemplate}"
											  SelectionMode="None"
											  IsItemClickEnabled="True"
											  uen:Navigation.Request="DealsProduct"
											  Style="{StaticResource ListViewStyle}" >

										<ListView.Footer>
											<ProgressBar IsIndeterminate="{Binding Data.ExtendedProperties.IsLoadingMoreItems}"
														 HorizontalAlignment="Stretch"
														 Visibility="{Binding Data.ExtendedProperties.IsLoadingMoreItems}" />
										</ListView.Footer>
									</ListView>
								</Grid>
							</UserControl>
						</DataTemplate>
					</uer:FeedView>
				</Grid>

			</utu:AutoLayout>
		</utu:AutoLayout>

		<Grid Grid.Column="1"
			  x:Name="DetailsGrid"
			  Visibility="Collapsed">
			<ContentControl x:Name="Details"
							uen:Region.Attached="false"
							Grid.Column="1"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch"
							HorizontalContentAlignment="Stretch"
							VerticalContentAlignment="Stretch" />
		</Grid>
	</Grid>
</Page>
