<?xml version="1.0" encoding="utf-8" ?>
<base:SampleView
    x:Class="TubePlayer.MauiControls.EmbeddedControl"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:base="using:SyncfusionApp.MauiControls.Samples.Base"
    xmlns:chart="http://schemas.syncfusion.com/maui"
    xmlns:local="using:SyncfusionApp.MauiControls.Samples.CircularChart.SfCircularChart">
    <base:SampleView.Content>

        <!--<VerticalStackLayout
        Padding="30,0"
        Spacing="25"
        VerticalOptions="Center">

        <Image
            BindingContext="TubePlayer/Assets/Images/dotnet_bot.png"
            HeightRequest="200"
            HorizontalOptions="Center"
            SemanticProperties.Description="Cute dot net bot waving hi to you!"
            Source="{Binding Converter={StaticResource UnoImageConverter}}" />

        <Label
            FontSize="32"
            HorizontalOptions="Center"
            SemanticProperties.HeadingLevel="Level1"
            Text="Hello, World!" />

        <Label
            FontSize="18"
            HorizontalOptions="Center"
            SemanticProperties.Description="Welcome to dot net Multi platform App U I"
            SemanticProperties.HeadingLevel="Level2"
            Text="Welcome to .NET Multi-platform App UI" />

        <Button
            Command="{Binding Counter}"
            HorizontalOptions="Center"
            SemanticProperties.Hint="Counts the number of times you click"
            Text="{Binding CounterText}" />-->



        <chart:SfCircularChart
            x:Name="Chart1"
            Margin="20"
            VerticalOptions="Start">
            <chart:SfCircularChart.Resources>
                <ResourceDictionary>
                    <local:CornerRadiusConverter x:Key="innerRadiusConverter" />
                </ResourceDictionary>
            </chart:SfCircularChart.Resources>

            <chart:SfCircularChart.Title>
                <Label
                    Margin="0"
                    FontSize="16"
                    HorizontalOptions="Fill"
                    HorizontalTextAlignment="Center"
                    Text="View by location"
                    TextColor="Black"
                    VerticalOptions="Center" />
            </chart:SfCircularChart.Title>
            <chart:SfCircularChart.BindingContext>
                <local:DoughnutSeriesViewModel x:Name="doughnutViewModel" />
            </chart:SfCircularChart.BindingContext>
            <chart:SfCircularChart.Legend>
                <chart:ChartLegend Placement="Top" />
            </chart:SfCircularChart.Legend>

            <chart:SfCircularChart.Series>
                <chart:DoughnutSeries
                    x:Name="series"
                    EndAngle="585"
                    InnerRadius="0.55"
                    ItemsSource="{Binding CenterElevationData}"
                    LegendIcon="SeriesType"
                    PaletteBrushes="{Binding CustomColor2}"
                    ShowDataLabels="True"
                    StartAngle="225"
                    XBindingPath="Name"
                    YBindingPath="Value">
                    <chart:DoughnutSeries.DataLabelSettings>
                        <chart:CircularDataLabelSettings>
                            <chart:CircularDataLabelSettings.LabelStyle>
                                <chart:ChartDataLabelStyle LabelFormat="0'%" />
                            </chart:CircularDataLabelSettings.LabelStyle>
                        </chart:CircularDataLabelSettings>
                    </chart:DoughnutSeries.DataLabelSettings>
                    <chart:DoughnutSeries.CenterView>
                        <Border
                            x:Name="border"
                            BackgroundColor="GhostWhite"
                            HeightRequest="{Binding CenterHoleSize}"
                            WidthRequest="{Binding CenterHoleSize}">
                            <Border.StrokeShape>
                                <RoundRectangle CornerRadius="{Binding CenterHoleSize, Converter={StaticResource innerRadiusConverter}, Source={x:Reference series}}" />
                            </Border.StrokeShape>
                            <Border.Shadow>
                                <Shadow
                                    Brush="Black"
                                    Opacity="{OnPlatform Android='0.6',
                                                         iOS='0.6',
                                                         WinUI='0.5',
                                                         MacCatalyst='0.5'}"
                                    Radius="{OnPlatform Android='40',
                                                        iOS='20',
                                                        WinUI='50',
                                                        MacCatalyst='50'}" />
                            </Border.Shadow>
                            <StackLayout VerticalOptions="Center">
                                <Label
                                    FontAttributes="Bold"
                                    FontSize="12"
                                    HorizontalOptions="Center"
                                    HorizontalTextAlignment="Center"
                                    Text="Views"
                                    TextColor="Gray" />
                                <Label
                                    FontAttributes="Bold"
                                    FontSize="36"
                                    HorizontalOptions="Center"
                                    HorizontalTextAlignment="Center"
                                    Text="30K"
                                    TextColor="Black" />
                            </StackLayout>
                        </Border>
                    </chart:DoughnutSeries.CenterView>
                </chart:DoughnutSeries>
            </chart:SfCircularChart.Series>
        </chart:SfCircularChart>
        <!--</VerticalStackLayout>-->
    </base:SampleView.Content>
</base:SampleView>
