<Application x:Class="ToDo.App"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:wasm="http://platform.uno/wasm"
			 xmlns:utum="using:Uno.Toolkit.UI.Material"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:converters="using:ToDo.Converters"
			 mc:Ignorable="wasm">

	<Application.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<!-- Load WinUI resources -->
				<XamlControlsResources xmlns="using:Microsoft.UI.Xaml.Controls" />

				<!-- Load Material Toolkit resources -->
				<MaterialToolkitTheme xmlns="using:Uno.Toolkit.UI.Material"
									  ColorOverrideSource="ms-appx:///Styles/ColorPaletteOverride.xaml"
									  FontOverrideSource="ms-appx:///Styles/MaterialFontsOverride.xaml" />

				<ResourceDictionary>
					<ResourceDictionary.ThemeDictionaries>
						<ResourceDictionary x:Key="Light">
							<Color x:Key="OverlayColor">#51000000</Color>
						</ResourceDictionary>
						<ResourceDictionary x:Key="Dark">
							<Color x:Key="OverlayColor">#51FFFFFF</Color>
						</ResourceDictionary>
					</ResourceDictionary.ThemeDictionaries>
				</ResourceDictionary>

				<!-- Application's custom styles -->
				<ResourceDictionary Source="ms-appx:///Styles/FeedView.xaml" />
				<ResourceDictionary Source="ms-appx:///Styles/NavigationBar.xaml" />
				<ResourceDictionary Source="ms-appx:///Styles/NavigationView.xaml" />

			</ResourceDictionary.MergedDictionaries>

			<x:Double x:Key="LandscapeMaxPageWidth">500</x:Double>

			<!-- To override the default FlyoutLightDismissOverlayBackground resource -->
			<SolidColorBrush x:Key="FlyoutLightDismissOverlayBackground"
							 Color="{ThemeResource OverlayColor}" />
			
			<x:Double x:Key="WideMinWindowWidth">800</x:Double>
			<x:Double x:Key="ExtraWideMinWindowWidth">1000</x:Double>

			<converters:FormatConverter x:Key="FormatConverter" />
			<converters:StringFormatter x:Key="StringFormatter" />
      <converters:StringCompareConverter x:Key="IsNullOrEmpty" Comparison="IsNullOrEmpty" />
      <converters:StringCompareConverter x:Key="IsNullOrWhitespace" Comparison="IsNullOrWhitespace" />
      <converters:StringCompareConverter x:Key="IsEqualToParameterValue" Comparison="IsEqualToParameterValue" />
      <converters:StringCompareConverter x:Key="IsNotNullNorEmpty" Comparison="IsNullOrEmpty" InvertResult="True" />
      <converters:StringCompareConverter x:Key="IsNotNullNorWhitespace" Comparison="IsNullOrWhitespace" InvertResult="True" />
      <converters:StringCompareConverter x:Key="IsNotEqualToParameterValue" Comparison="IsEqualToParameterValue" InvertResult="True" />
      <converters:ReferenceConverter x:Key="IsNull" ConversionMode="IsNull" />
      <converters:ReferenceConverter x:Key="IsNotNull" ConversionMode="IsNotNull" />
			<converters:BitmapSourceConverter x:Key="BitmapSourceConverter" />

		</ResourceDictionary>
	</Application.Resources>

	<!-- Add resources here -->

</Application>
