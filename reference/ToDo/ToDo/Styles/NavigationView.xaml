<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:local="using:Microsoft.UI.Xaml.Controls"
					xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
					xmlns:muxcp="using:Microsoft.UI.Xaml.Controls.Primitives"
					xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:void="commented out code"
					xmlns:xamarin="http://uno.ui/xamarin"
					mc:Ignorable="void xamarin">

	<Style x:Key="HomeNavigationViewSplitViewStyle" TargetType="SplitView">
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="OpenPaneLength" Value="{ThemeResource SplitViewOpenPaneThemeLength}" />
		<Setter Property="CompactPaneLength" Value="{ThemeResource SplitViewCompactPaneThemeLength}" />
		<Setter Property="PaneBackground" Value="{ThemeResource SystemControlPageBackgroundChromeLowBrush}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="SplitView">
					<Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
					
						<Grid.ColumnDefinitions>
							<ColumnDefinition x:Name="ColumnDefinition1"
											  Width="{ThemeResource SplitViewOpenPaneThemeLength}" />
							<ColumnDefinition x:Name="ColumnDefinition2" Width="*" />
						</Grid.ColumnDefinitions>

						<!-- Content Area -->
						<Grid x:Name="ContentRoot" Grid.ColumnSpan="2">
							<Border Child="{TemplateBinding Content}" />

							<win:Rectangle x:Name="LightDismissLayer"
										   Fill="Transparent"
										   Visibility="Collapsed" />
							<xamarin:Button x:Name="LightDismissLayer"
											Visibility="Collapsed"
											HorizontalAlignment="Stretch"
											VerticalAlignment="Stretch">
								<Button.Template>
									<ControlTemplate>
										<Border Background="{StaticResource SplitViewDismissBackgroundColor}" />
									</ControlTemplate>
								</Button.Template>
							</xamarin:Button>
						</Grid>

						<!-- Pane Content Area -->
						<Grid x:Name="PaneRoot"
							  BorderBrush="{TemplateBinding BorderBrush}"
							  BorderThickness="{TemplateBinding BorderThickness}"
							  Grid.ColumnSpan="1"
							  HorizontalAlignment="Stretch"
							  Visibility="Visible"
							  Background="{TemplateBinding PaneBackground}"
							  
							  Canvas.ZIndex="1">
							<win:Grid.BackgroundTransition>
								<BrushTransition />
							</win:Grid.BackgroundTransition>
							<Grid.RenderTransform>
								<CompositeTransform x:Name="PaneTransform" />
							</Grid.RenderTransform>
							<Border Child="{TemplateBinding Pane}" />
							<Rectangle x:Name="HCPaneBorder"
									   Visibility="Collapsed"
									   Fill="{ThemeResource SystemControlForegroundTransparentBrush}"
									   x:DeferLoadStrategy="Lazy"
									   Width="1"
									   HorizontalAlignment="Right" />
						</Grid>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="DisplayGroups">

								<VisualState x:Name="Wide">
									<VisualState.StateTriggers>
										<AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWindowWidth}" />
									</VisualState.StateTriggers>
									<VisualState.Setters>
										<Setter Target="ColumnDefinition1.Width"
												Value="{ThemeResource SplitViewOpenPaneThemeLength}" />
										<Setter Target="ColumnDefinition2.Width"
												Value="*" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Narrow">
									<VisualState.StateTriggers>
										<AdaptiveTrigger MinWindowWidth="0" />
									</VisualState.StateTriggers>
									<VisualState.Setters>
										<Setter Target="ColumnDefinition1.Width"
												Value="*" />
										<Setter Target="ColumnDefinition2.Width"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="DisplayModeStates">
								<VisualStateGroup.Transitions>
									<VisualTransition From="ClosedCompactLeft" To="OpenCompactOverlayLeft">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.CompactPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="OpenCompactOverlayLeft" To="ClosedCompactLeft">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.CompactPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="ClosedCompactLeft">
									<VisualState.Setters>
										<Setter Target="PaneTransform.TranslateX" Value="0" />
									</VisualState.Setters>
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.CompactPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="OpenCompactOverlayLeft">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="0" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(Grid.Column)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="NaN" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="OpenInlineLeft">
									<VisualState.Setters>
										<Setter Target="PaneTransform.TranslateX" Value="0" />
									</VisualState.Setters>
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="HomeNavigationViewStyle" TargetType="muxc:NavigationView">
		<Setter Property="IsBackButtonVisible" Value="Collapsed" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Background" Value="{ThemeResource SurfaceBrush}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="muxc:NavigationView">
					<Grid x:Name="RootGrid">
						<SplitView x:Name="RootSplitView"
								   DisplayMode="Inline"
								   OpenPaneLength="{TemplateBinding OpenPaneLength}"
								   CompactPaneLength="{TemplateBinding CompactPaneLength}"
								   IsPaneOpen="true"
								   IsTabStop="{TemplateBinding IsTabStop}"
								   Style="{StaticResource HomeNavigationViewSplitViewStyle}">
							<SplitView.Pane>
								<Grid Background="{TemplateBinding Background}">
									<Grid.RowDefinitions>
										<!-- 0: Header, 1: MenuItems, 2: Separator, 3: FooterMenuItems, 4: Footer -->
										<!-- note: visually, we want MenuItems+FooterMenuItems to stay on top -->
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="*" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>

									<!-- R0: Header -->
									<ContentControl Grid.Row="0"
													x:Name="PaneHeaderContentBorder"
													IsTabStop="False"
													VerticalContentAlignment="Stretch"
													HorizontalContentAlignment="Stretch" />

									<!-- R1: MenuteItems -->
									<local:ItemsRepeater Grid.Row="1" x:Name="MenuItemsHost">
										<local:ItemsRepeater.Layout>
											<local:StackLayout />
										</local:ItemsRepeater.Layout>
									</local:ItemsRepeater>

									<!-- R2: Separator -->
									<!-- workaround: on uno, NVISeperator is selectable if placed in MenuItems, so it got moved here -->
									<muxc:NavigationViewItemSeparator Grid.Row="2" />

									<!-- R3: FooterMenuItems -->
									<local:ItemsRepeater Grid.Row="3" x:Name="FooterMenuItemsHost">
										<local:ItemsRepeater.Layout>
											<local:StackLayout />
										</local:ItemsRepeater.Layout>
									</local:ItemsRepeater>

									<!-- R4 Footer -->
									<ContentControl Grid.Row="4"
													x:Name="FooterContentBorder"
													IsTabStop="False"
													VerticalContentAlignment="Stretch"
													HorizontalContentAlignment="Stretch" />
								</Grid>
							</SplitView.Pane>
							<SplitView.Content>
								<ContentPresenter Content="{TemplateBinding Content}" />
							</SplitView.Content>
						</SplitView>

						<void:Button x:Name="TogglePaneButton"
									 void:Note="for debugging"
									 Margin="0,50,0,0"
									 HorizontalAlignment="Center"
									 VerticalAlignment="Center"
									 Style="{StaticResource PaneToggleButtonStyle}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>
