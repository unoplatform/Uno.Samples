<Page x:Class="ChatUI.MainPage"
	  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:android="http://uno.ui/android"
	  xmlns:behaviors="using:ChatUI.Behaviors"
	  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	  xmlns:ios="http://uno.ui/ios"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  xmlns:mvux="using:Uno.Extensions.Reactive.UI"
	  xmlns:presentation="using:ChatUI.Presentation"
	  xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:xamarin="http://uno.ui/xamarin"
	  x:Name="MessageView"
	  Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
	  mc:Ignorable="d ios android xamarin">

	<Page.Resources>
		<ResourceDictionary>
			<Style TargetType="ListView">
				<Setter Property="RenderTransformOrigin"
						Value=".5,.5" />
				<Setter Property="behaviors:ReversedPointerWheel.IsEnabled"
						Value="True" />
				<!--  Needed to prevent the chat UI to be rendered upside-down  -->
				<Setter Property="RenderTransform">
					<Setter.Value>
						<ScaleTransform ScaleY="-1" />
					</Setter.Value>
				</Setter>
			</Style>
			<Style TargetType="ListViewItem">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="ListViewItem">
							<Grid x:Name="ContentBorder"
								  Background="{TemplateBinding Background}"
								  BorderBrush="{TemplateBinding BorderBrush}"
								  BorderThickness="{TemplateBinding BorderThickness}"
								  CornerRadius="{TemplateBinding CornerRadius}"
								  RenderTransformOrigin=".5,.5">
								<Grid.RenderTransform>
									<!--  Setting the RenderTransform on the ListViewItem itself is not supported by Uno, we need to set it on the first child instead  -->
									<ScaleTransform ScaleY="-1" />
								</Grid.RenderTransform>
								<Grid x:Name="ContentPresenterGrid"
									  Margin="0,0,0,0"
									  Background="Transparent">
									<Grid.RenderTransform>
										<TranslateTransform x:Name="ContentPresenterTranslateTransform" />
									</Grid.RenderTransform>
									<ContentPresenter x:Name="ContentPresenter"
													  Margin="{TemplateBinding Padding}"
													  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
													  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
													  xamarin:ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
													  Content="{TemplateBinding Content}"
													  ContentTemplate="{TemplateBinding ContentTemplate}"
													  ContentTransitions="{TemplateBinding ContentTransitions}" />
								</Grid>
								<TextBlock x:Name="PlaceholderTextBlock"
										   Margin="{TemplateBinding Padding}"
										   AutomationProperties.AccessibilityView="Raw"
										   Foreground="{x:Null}"
										   IsHitTestVisible="False"
										   Opacity="0"
										   Text="Xg" />
								<Rectangle x:Name="PlaceholderRect"
										   Fill="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"
										   Visibility="Collapsed" />
								<Rectangle x:Name="MultiArrangeOverlayBackground"
										   Grid.ColumnSpan="2"
										   Fill="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
										   IsHitTestVisible="False"
										   Opacity="0" />
								<Border x:Name="MultiSelectSquare"
										Width="20"
										Height="20"
										Margin="12,0,0,0"
										HorizontalAlignment="Left"
										VerticalAlignment="Center"
										BorderBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
										BorderThickness="2"
										Visibility="Collapsed">
									<Border.Clip>
										<RectangleGeometry Rect="0,0,20,20">
											<win:RectangleGeometry.Transform>
												<TranslateTransform x:Name="MultiSelectClipTransform" />
											</win:RectangleGeometry.Transform>
										</RectangleGeometry>
									</Border.Clip>
									<Border.RenderTransform>
										<TranslateTransform x:Name="MultiSelectCheckBoxTransform" />
									</Border.RenderTransform>
									<FontIcon x:Name="MultiSelectCheck"
											  win:Glyph="&#xE73E;"
											  xamarin:Glyph="&#xE081;"
											  FontFamily="{ThemeResource SymbolThemeFontFamily}"
											  FontSize="16"
											  Foreground="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
											  Opacity="0"
											  Visibility="Collapsed" />
								</Border>
								<TextBlock x:Name="MultiArrangeOverlayText"
										   Grid.ColumnSpan="2"
										   Margin="18,9,18,0"
										   AutomationProperties.AccessibilityView="Raw"
										   FontFamily="{ThemeResource ContentControlThemeFontFamily}"
										   FontSize="26.667"
										   Foreground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
										   IsHitTestVisible="False"
										   Opacity="0"
										   Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DragItemsCount}"
										   TextTrimming="WordEllipsis"
										   TextWrapping="Wrap" />
								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup x:Name="DisabledStates">
										<VisualState x:Name="Enabled" />
										<VisualState x:Name="Disabled">
											<Storyboard>
												<DoubleAnimation Storyboard.TargetName="ContentBorder"
																 Storyboard.TargetProperty="Opacity"
																 To="{ThemeResource ListViewItemDisabledThemeOpacity}"
																 Duration="0" />
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
									<VisualStateGroup x:Name="DataVirtualizationStates">
										<VisualState x:Name="DataAvailable" />
										<VisualState x:Name="DataPlaceholder">
											<Storyboard>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock"
																			   Storyboard.TargetProperty="Visibility">
													<DiscreteObjectKeyFrame KeyTime="0"
																			Value="Visible" />
												</ObjectAnimationUsingKeyFrames>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderRect"
																			   Storyboard.TargetProperty="Visibility">
													<DiscreteObjectKeyFrame KeyTime="0"
																			Value="Visible" />
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<presentation:MessageTemplateSelector x:Key="MessageTemplateSelector">
				<presentation:MessageTemplateSelector.MyMessageTemplate>
					<DataTemplate>
						<StackPanel Margin="20,15,0,0">
							<Border MinWidth="300"
									MinHeight="100"
									Padding="10"
									Background="DeepPink"
									CornerRadius="10">
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition Height="*" />
										<RowDefinition Height="*" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<TextBlock FontWeight="Bold"
											   Text="{Binding ContactName}" />
									<TextBlock Grid.Row="1"
											   Text="{Binding Text}"
											   TextWrapping="WrapWholeWords" />
									<TextBlock Grid.Row="2"
											   HorizontalAlignment="Right"
											   Text="{Binding UserFriendlyTimestamp}" />
								</Grid>
							</Border>
							<Polygon Margin="0,0,10,0"
									 HorizontalAlignment="Right"
									 Fill="DeepPink"
									 Points="0,0 10,0 10,10" />
						</StackPanel>
					</DataTemplate>
				</presentation:MessageTemplateSelector.MyMessageTemplate>
				<presentation:MessageTemplateSelector.OtherMessageTemplate>
					<DataTemplate>
						<StackPanel Margin="0,15,20,0">
							<Border MinWidth="300"
									MinHeight="100"
									Padding="10"
									Background="DeepSkyBlue"
									CornerRadius="10">
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition Height="*" />
										<RowDefinition Height="*" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<TextBlock FontWeight="Bold"
											   Text="{Binding ContactName}" />
									<TextBlock Grid.Row="1"
											   Text="{Binding Text}"
											   TextWrapping="WrapWholeWords" />
									<TextBlock Grid.Row="2"
											   HorizontalAlignment="Right"
											   Text="{Binding UserFriendlyTimestamp}" />
								</Grid>
							</Border>
							<Polygon Margin="10,0,0,0"
									 HorizontalAlignment="Left"
									 Fill="DeepSkyBlue"
									 Points="0,0 10,0 0,10" />
						</StackPanel>
					</DataTemplate>
				</presentation:MessageTemplateSelector.OtherMessageTemplate>
			</presentation:MessageTemplateSelector>
		</ResourceDictionary>
	</Page.Resources>

	<Grid behaviors:InputPaneExtensions.IsPanIntoView="True">
		<Grid.RowDefinitions>
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		<mvux:FeedView Grid.Row="0"
					   Source="{Binding Messages}">
			<mvux:FeedView.ValueTemplate>
				<DataTemplate>
					<ListView ItemTemplateSelector="{StaticResource MessageTemplateSelector}"
							  ItemsSource="{Binding Data}" />
				</DataTemplate>
			</mvux:FeedView.ValueTemplate>
			<mvux:FeedView.ProgressTemplate>
				<DataTemplate>
					<ProgressRing />
				</DataTemplate>
			</mvux:FeedView.ProgressTemplate>
			<mvux:FeedView.ErrorTemplate>
				<DataTemplate>
					<TextBlock Text="An error has occurred retrieving messages" />
				</DataTemplate>
			</mvux:FeedView.ErrorTemplate>
			<mvux:FeedView.NoneTemplate>
				<DataTemplate>
					<TextBlock Text="No Results" />
				</DataTemplate>
			</mvux:FeedView.NoneTemplate>
		</mvux:FeedView>
		<Grid Grid.Row="1"
			  HorizontalAlignment="Stretch"
			  VerticalAlignment="Bottom"
			  DataContext="{Binding NewMessage}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<TextBox x:Name="MessageTextBox"
					 Grid.Column="0"
					 Margin="10,0,0,10"
					 HorizontalAlignment="Stretch"
					 behaviors:CommandOnKeyPressBehavior.TextBoxCommand="{Binding DataContext.AddMessage, ElementName=MessageView}"
					 Text="{Binding Text, Mode=TwoWay}" />
			<Button x:Name="SendButton"
					Grid.Column="1"
					Margin="10,0,10,10"
					Command="{Binding DataContext.AddMessage, ElementName=MessageView}"
					Content="Send" />
		</Grid>
	</Grid>
</Page>
